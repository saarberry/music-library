@import url(https://fonts.googleapis.com/css2?family=Lusitana:wght@400;700&family=Raleway:wght@300;500&display=swap);
/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

html {
  font-family: "Raleway", sans-serif;
  background-color: #FFFFFF;
  color: #0D0D0D;
  font-size: 8px;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Lusitana", serif;
  color: #F74553;
  font-weight: bold;
  margin: 0;
}

h1 {
  font-size: 5rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

.Album {
  border-radius: 0.5rem;
  overflow: hidden;
  position: relative;
}
.Album:before {
  content: " ";
  display: block;
  width: 100%;
  padding-top: 100%;
}
.Album > img {
  bottom: 0;
  height: 100%;
  position: absolute;
  width: 100%;
}
.Album .Album__Details {
  -webkit-backdrop-filter: blur(4px);
          backdrop-filter: blur(4px);
  background: rgba(13, 13, 13, 0.25);
  bottom: 0;
  left: 0;
  mix-blend-mode: normal;
  padding: 3rem;
  position: absolute;
  right: 0;
}
.Album .Album__Title {
  font-family: "Lusitana", serif;
  color: #FFF0F1;
  font-size: 3rem;
  line-height: 4rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.Album .Album__Artist {
  font-family: "Raleway", sans-serif;
  color: #FFF0F1;
  font-size: 1.75rem;
  line-height: 2.5rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.Search {
  position: relative;
}
.Search .Search__Input {
  font-family: "Lusitana", serif;
  transition-property: border-color;
  transition-duration: 0.2s;
  transition-timing-function: ease-in-out;
  border-radius: 0.5rem;
  border: 0.25rem solid #FFD5DA;
  color: #0D0D0D;
  font-size: 2.5rem;
  height: 6rem;
  line-height: 3rem;
  outline: none;
  padding: 1.5rem 5rem 1.5rem 2rem;
  width: 100%;
}
.Search .Search__Input + .Icon {
  color: #A1000D;
  height: 3rem;
  position: absolute;
  right: 1rem;
  top: 1.5rem;
  width: 3rem;
}
.Search .Search__Input::-moz-placeholder {
  color: #D5D5D5;
}
.Search .Search__Input:-ms-input-placeholder {
  color: #D5D5D5;
}
.Search .Search__Input::placeholder {
  color: #D5D5D5;
}
.Search .Search__Input:hover {
  border-color: #FFB1B8;
}
.Search .Search__Input:focus, .Search .Search__Input:active {
  border-color: #FF7E88;
}

.Header {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  margin: 0 7rem;
  align-items: center;
  height: 10rem;
}
.Header h1 {
  grid-column: 1/3;
}
.Header .Search {
  grid-column: 3/11;
}

.Library {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  margin: 0 7rem;
  grid-auto-rows: -webkit-min-content;
  grid-auto-rows: min-content;
  height: calc(100vh - 10rem);
  padding: 2rem 0;
  row-gap: 2rem;
}
.Library .Album {
  grid-column-end: span 2;
}
.Library .album-list-enter-active,
.Library .album-list-leave-active,
.Library .album-list-move {
  transition-property: all;
  transition-duration: 0.5s;
  transition-timing-function: ease-in-out;
}
.Library .album-list-leave-active {
  position: absolute;
}
.Library .album-list-enter-from,
.Library .album-list-leave-to {
  opacity: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/